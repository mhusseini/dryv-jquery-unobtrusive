!function(){var convert=function(e,t){switch(t){case"number":return Number(e);case"boolean":e.toLowerCase();default:return e}},getValue=function(e){switch(e.attr("type").toLowerCase()){case"checkbox":case"radio":return e[0].checked;default:return convert(e.val(),e.attr("data-type-dryv"))}},updateField=function(e,t){var r=$(e);if(!r.data("dryv-ignore"))for(var a=r.attr("name").replace(/^\w|\.\w/g,function(e){return e.toLowerCase()}).split("."),n=a.length-1,o=0;o<a.length;o++){var i=a[o],d=/(\w+)(\[(\d)\])?/.exec(i),c=d[1],u=d[3],s=t;if(t=t[c],o<n){if(t||(t=u?[]:{},s[c]=t),u){var v=Number(u);t=t[v]?t[v]:t[v]={}}}else u?(t||(t=s[c]=[]),t[Number(u)]=getValue(r)):s[c]=getValue(r)}},createObject=function(e){var r={};return $("input, select, textarea",e).each(function(e,t){return updateField(t,r)}),e.data("dryv-object",r),r},getObject=function(e){var t,r=(t=e.data("dryv-object"))||createObject(e);return r.isNew=!t,r};$.validator.addMethod("dryv",function(e,t,r){var a=getObject($(this.currentForm));a.isNew||updateField(t,a);var n=$(t);n.data("msgDryv",null);for(var o=0,i=r;o<i.length;o++){var d=(0,i[o])(a);if(d)return n.data("msgDryv",d.message||d),!1}return!0}),$.validator.unobtrusive.adapters.add("dryv",function(options){var form=options.form,$form=$(form);$form.data("dryv-init")||($form.data("dryv-init",!0),$form.bind("submit",function(){$(this).data("dryv-object",null)}),$("input:not([data-val-dryv]), textarea:not([data-val-dryv])",$form).each(function(e,t){"hidden"===t.type&&$("input[type=checkbox][name='"+t.name+"']",$form).length?$(t).data("dryv-ignore",!0):$(t).change(function(){var e=getObject($form);updateField(this,e)})}));try{options.rules.dryv=eval(options.message)}catch(e){console.error("Failed to parse Dryv validation: "+e+".\nThe expression that was parsed is:\n"+options.message)}})}();