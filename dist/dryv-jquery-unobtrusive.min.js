!function(e){if("object"==typeof module&&"object"==typeof module.exports){var r=e(require,exports);void 0!==r&&(module.exports=r)}else"function"==typeof define&&define.amd&&define(["require","exports","jquery"],e)}(function(require,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var $=require("jquery");!function(){var createFormHandler=function(e){var r=function(){return e.data("dryv-object",null)};e.data("dryv-handler",r).on("invalid-form",r)},createObject=function(e){var r=$(e.currentForm);r.data("dryv-handler")||createFormHandler(r);var a={};return $("input, select, textarea",r).each(function(e,r){var t=$(r);a[t.attr("name")]=t.val()}),r.data("dryv-object",a),a},getObject=function(e){return $(e.currentForm).data("dryv-object")||createObject(e)};$.validator.addMethod("dryv",function(e,r,t){var a=getObject(this),o=$(r);o.data("msgDryv",null);for(var n=0,d=t;n<d.length;n++){var i=(0,d[n])(a);if(i)return o.data("msgDryv",i.message||i),!1}return!0}),$.validator.unobtrusive.adapters.add("dryv",function(options){try{options.rules.dryv=eval(options.message)}catch(e){console.error("Failed to parse Dryv validation: "+e+".\nThe expression that was parsed is:\n"+options.message)}})}()});